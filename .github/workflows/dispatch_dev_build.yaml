name: "[Dispatch] Dev build"

on:
  workflow_dispatch:
    inputs:
        version:
          description: 'enter version(x.y.z)'
          required: true
          default: '2.0.0'

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  VERSION: ${{ github.event.inputs.version }}

jobs:
  docker:
    runs-on: ubuntu-latest
    outputs:
      TIME: ${{ steps.get_date.outputs.TIME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          token: ${{ secrets.PAT_TOKEN }}
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Restore cached node_modules
        id: restore-node-cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.OS }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-modules-

      - name: Install dependencies
        if: steps.restore-node-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Change version
        run: |
          converted_version=$(echo ${{ env.VERSION }} | sed -E 's/^([0-9]+\.[0-9]+)\.([a-zA-Z]+)/\1.0-\2/')
          npm version $converted_version --no-git-tag-version --allow-same-version --no-commit-hooks --include-workspace-root -w=web
          echo "converted_version=$converted_version" >> "$GITHUB_OUTPUT"

      - name: Configure git
        run: |
          git config --global user.signingkey "${{ secrets.CLOUDFORET_ADMIN_GPG_KEY_ID }}"
          git config --global user.email "${{ vars.GIT_EMAIL }}"
          git config --global user.name "${{ vars.GIT_USERNAME }}"

      - name: Commit changes and Set current commit SHA to output
        id: get_sha
        run: |
          git commit -s -am "chore: version ${{ env.VERSION }}"
          echo "NEW_COMMIT_SHA=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
        env:
          GIT_AUTHOR_NAME: ${{ vars.GIT_USERNAME }}
          GIT_AUTHOR_EMAIL: ${{ vars.GIT_EMAIL }}
          GIT_COMMITTER_NAME: ${{ vars.GIT_USERNAME }}
          GIT_COMMITTER_EMAIL: ${{ vars.GIT_EMAIL }}

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          branch: ${{ github.ref }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.CLOUDFORET_DEV_DOCKER_USERNAME }}
          password: ${{ secrets.CLOUDFORET_DEV_DOCKER_PASSWORD }}

      - name: Get Date
        run: |
          sudo ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime
          CURRENT_TIME=$(date +'%Y%m%d.%H%M%S')
          
          echo "TIME=$CURRENT_TIME" >> $GITHUB_ENV
          echo "TIME=$CURRENT_TIME" >> $GITHUB_OUTPUT

      - name: Build and push to dockerhub
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./apps/web/Dockerfile
          push: true
          tags: |
            sulmo/${{ github.event.repository.name }}:latest
            sulmo/${{ github.event.repository.name }}:${{ env.TIME }}
          cache-from: cloudforetdev/${{ env.SERVICE }}:latest
          cache-to: type=inline
          provenance: false

      - name: Notice when job fails
        if: failure()
        uses: 8398a7/action-slack@v3.15.0
        with:
          status: ${{job.status}}
          fields: repo,workflow,job
          author_name: Github Action Slack

  notification:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.15.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,ref,workflow,job
          author_name: Github Action Slack
